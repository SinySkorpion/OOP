# Программирование на языке высокого уровня (Python).
# Задание №4.3.6 Вариант 2
#

# Выполнил: Иванов Даниил Евгеньевич
# Группа: ПИН-б-о-22-1
# E-mail: daniilivanov752@gmail.com

import time
from ПищущаяПринадлежность import *


class Заказ:
    """Класс Заказ содержит информацию о заказе."""

    # Переменная класса для определения номера заказа
    счетчик_заказов = 0

    def __init__(self):
        """Конструктор класса."""
        # Хранит экземпляры класса ПищущаяПринадлежность и его потомков
        self.заказанные_принадлежности = []
        Заказ.счетчик_заказов += 1
        self.номер_заказа = Заказ.счетчик_заказов

    def __str__(self):
        """Вернуть содержимое заказа и его сумму.

        Формат вывода:

        Заказ №2
        1. Принадлежность: Ручка | Цена: 70.00 р.
            Чернила: шариковое | Корпус: пластик
            Наконечник: стандартный | Количество: 1
        2. Принадлежность: Карандаш | Цена: 50.00 р.
            Чернила: стержень | Корпус: дерево
            Наконечник: острый | Количество: 1
        Сумма заказа: 120.00 р.

        """
        res = (
                f'Заказ №{self.номер_заказа}\n' +
                '\n'.join([f'{i + 1}. ' + str(принадлежность) for i, принадлежность in enumerate(self.заказанные_принадлежности)]))
        return res

    def добавить(self, принадлежности):
        """Добавить принадлежности в заказ."""
        self.заказанные_принадлежности.append(принадлежности)

    def сумма(self):
        """Вернуть сумму заказа."""
        return sum(принадлежность.цена for принадлежность in self.заказанные_принадлежности)

    def выполнить(self):
        """Выполнить заказ.

        Для каждой принадлежности в заказе: формирование и упаковать.
        Сообщить, что заказ готов и пожелать приятного аппетита.

        Для визуального эффекта, каждое действие осуществляется с "задержкой",
        используя time.sleep(1).

        Формат вывода:

        Заказ поступил на выполнение...
        1. Ручка
        Формируем заказ
        Упаковываем в фирменную упаковку
        Готово

        Заказ №2 готов! Спасибо за покупку!
        """
        for i, принадлежность in enumerate(self.заказанные_принадлежности, start=1):
            print(f'{i}. {принадлежность.название}')
            принадлежность.формирование()
            принадлежность.упаковать()
        print(f'Заказ №{self.номер_заказа} готов! Спасибо за покупку!')